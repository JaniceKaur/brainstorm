# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BrainStorm2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtTest
from PyQt5.QtWidgets import QMessageBox, QWidget, QVBoxLayout
from PyQt5.QtCore import QDir, Qt, QUrl, QTimer, QDateTime
from PyQt5.QtMultimedia import QMediaContent, QMediaPlayer
from PyQt5.QtMultimediaWidgets import QVideoWidget

class Popup(QWidget):
    def __init__(self):
        super().__init__()
        # layout = QVBoxLayout()
        # self.label = QtWidgets.QLabel("Another Window")
        # layout.addWidget(self.label)
        # self.setLayout(layout)
        #self.resize(600,400)
        self.timer = QTimer()
        self.timer.start(32000)
        layout = QVBoxLayout()
        self.VideoWidget = QVideoWidget()
        layout.addWidget(self.VideoWidget)
        self.player = QMediaPlayer(None, QMediaPlayer.VideoSurface)
        self.player.setMedia(QMediaContent(QUrl.fromLocalFile("/Users/janice/PycharmProjects/GUI/bike.mp4")))
        self.player.play()
        self.player.setVideoOutput(self.VideoWidget)
        self.setLayout(layout)

        self.timer.timeout.connect(self.closefn)

    def closefn(self):
        self.close()

        # self.mediaPlayer.setMedia(QMediaContent(QUrl.fromLocalFile("/Users/janice/PycharmProjects/GUI/bike.mp4")))
        # self.mediaPlayer = QMediaPlayer(None, QMediaPlayer.VideoSurface)
        # videoWidget = QVideoWidget()
        # self.mediaPlayer.setVideoOutput(videoWidget)


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(379, 206)
        MainWindow.setWindowTitle("BrainStorm")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.ConnectButton = QtWidgets.QPushButton(self.centralwidget)
        self.ConnectButton.setGeometry(QtCore.QRect(290, 2, 75, 26))
        self.ConnectButton.setObjectName("ConnectButton")
        self.ConnectButton.setText("Connect")
        self.ConnectButton.clicked.connect(self.connectEmotiv)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(40, 20, 302, 181))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setObjectName("label")
        self.label.setText("Preprocessing:")
        self.horizontalLayout.addWidget(self.label)
        self.comboBox = QtWidgets.QComboBox(self.widget)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("None")
        self.comboBox.addItem("Preprocessing Technique 1")
        self.comboBox.addItem("Preprocessing Technique 2")
        self.comboBox.addItem("Preprocessing Technique 3")
        self.horizontalLayout.addWidget(self.comboBox)

        self.SubmitButton = QtWidgets.QPushButton(self.widget)
        self.SubmitButton.setObjectName("SubmitButton")
        self.SubmitButton.setText("Submit")

        self.StartButton = QtWidgets.QPushButton(self.widget)
        self.StartButton.setText("Start")
        self.StartButton.clicked.connect(self.videoPopup)
        self.StartButton.setObjectName("StartButton")
        self.verticalLayout.addWidget(self.StartButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.verticalLayout.addWidget(self.SubmitButton)
        self.ModelButton = QtWidgets.QPushButton(self.widget)
        self.ModelButton.setObjectName("ModelButton")
        self.ModelButton.setText("Apply ML Model")
        self.ModelButton.clicked.connect(self.applyML)
        self.verticalLayout.addWidget(self.ModelButton)
        MainWindow.setCentralWidget(self.centralwidget)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def applyML(sel):
        pass

    def connectEmotiv(self):
        print('connected')  # code to connect the emotivPro

    def videoPopup(self, checked):
        self.pop = Popup()
        self.pop.setObjectName("popup")
        self.pop.showMaximized()
        print(self.pop.isVisible())
        i = 0
        while (i != 1000):
            i += 1
            QtTest.QTest.qWait(1000)
            print(i)
            if self.pop.isVisible():
                continue
            else:
                print(self.pop.isVisible())
                break


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    w = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(w)
    w.show()
    sys.exit(app.exec_())

